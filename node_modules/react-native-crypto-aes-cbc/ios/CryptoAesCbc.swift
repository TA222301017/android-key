@objc(CryptoAesCbc)
class CryptoAesCbc: NSObject {
    @objc(encryptInHex:withSecret:withText:withPadding:withResolver:withRejecter:)
    func encryptInHex( iv: NSString,  secretKey: NSString,  text: NSString,  padding: NSString, resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        let encryptString:String = Constants.aesEncrypt(data: text as String, key: secretKey as String, iv: iv as String, padding: padding as String)
        resolve(encryptString)
    }
    
    @objc(encryptInBase64:withSecret:withText:withPadding:withResolver:withRejecter:)
    func encryptInBase64( iv: NSString, withKey secretKey: NSString, withText text: NSString, withPadding padding: NSString, resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        let encryptString:String = Constants.aesEncryptBase64(data: text as String, key: secretKey as String, iv: iv as String, padding: padding as String)
        resolve(encryptString)
    }
    @objc(decryptByBase64:withSecret:withText:withPadding:withResolver:withRejecter:)
    func decryptByBase64( iv: NSString, withKey secretKey: NSString, withText text: NSString, withPadding padding: NSString, resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        let encryptString:String = Constants.decryptBase64(data: text as String, key: secretKey as String, iv: iv as String, padding: padding as String)
        resolve(encryptString)
    }
    @objc(decryptByHex:withSecret:withText:withPadding:withResolver:withRejecter:)
    func decryptByHex( iv: NSString, withKey secretKey: NSString, withText text: NSString, withPadding padding: NSString, resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        let encryptString:String = Constants.decryptHex(data: text as String, key: secretKey as String, iv: iv as String, padding: padding as String)
        resolve(encryptString)
    }
    @objc(sha256:withResolver:withRejecter:)
    func sha256( text: NSString,  resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        let encryptString:String = Constants.sha256(data: text as String)
        resolve(encryptString)
    }
    @objc(multiply:withB:withResolver:withRejecter:)
    func multiply(a: Float, b: Float, resolve:RCTPromiseResolveBlock,reject:RCTPromiseRejectBlock) -> Void {
        resolve(a*b)
    }

    @objc static func requiresMainQueueSetup() -> Bool {
        return false
    }
}
